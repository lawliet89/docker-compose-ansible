---
- name: "Check code source"
  fail:
    msg: "Code source must be `git` or `local` and not `{{ code_source }}`"
  when: "code_source != 'git' and code_source != 'local'"

- name: "Check existence of {{ project_directory }}"
  file:
    path: "{{ project_directory }}"
    state: directory

- include_tasks: code-source-git.yml
  when: code_source == 'git'

- include_tasks: code-source-local.yml
  when: code_source == 'local'

- name: "Generate `-f` parameters"
  set_fact:
    docker_compose_switch: "{{ docker_compose_files | map('regex_replace', '(.*)', '-f \\1') | join(' ') }}"

- name: "Docker-compose Pull images"
  shell:
    cmd: "docker-compose {{ docker_compose_switch }} pull"
    chdir: "{{ project_directory }}"
  args:
    warn: False
  become: "{{ docker_become }}"
  when: pull_images | bool

- name: "Docker-compose Build"
  shell:
    cmd: "docker-compose {{ docker_compose_switch }} build {{ pull_images | ternary('--pull', '') }}"
    chdir: "{{ project_directory }}"
  args:
    warn: False
  become: "{{ docker_become }}"
  when: build_images | bool

- name: "Stop, build and Start Docker Compose {{ project_directory }}: {{ '; '.join(docker_compose_files) }}"
  docker_compose:
    project_src: "{{ project_directory }}"
    project_name: "{{ project_name | default(omit) }}"
    build: False
    files: "{{ docker_compose_files }}"
    remove_volumes: "{{ remove_volumes | default(no) }}"
    state: "{{ item }}"
  become: "{{ docker_become }}"
  with_items:
    - absent
    - present
